//
//  ViewController.swift
//  LocalNotification
//
//  Created by Anurag Kashyap on 02/09/19.
//  Copyright Â© 2019 Anurag Kashyap. All rights reserved.
//

import UIKit
import UserNotifications

class LocalNotificationVC: UIViewController {
    
    let notificationCenter = UNUserNotificationCenter.current()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        notificationCenter.delegate = self
        
        //Ask for authorisation
        notificationCenter.requestAuthorization(options: [.alert, .badge, .sound]) { (success, error) in
            
        }
    }
    
    @IBAction func localNotificationButtonAction(_ sender : UIButton){
        
        //Configure the Notification
        let content = UNMutableNotificationContent()
        content.categoryIdentifier = "contentIdentifier"
        content.title = "Local Notification"
        content.body = "This is the first ever notification generated by the application"
        content.sound = UNNotificationSound.default
        content.badge = 1
        content.userInfo = ["name":"Anurag"]
        //Contents Images
        
        let url = Bundle.main.url(forResource: "Spiderman", withExtension: "jpg")
        let attachment = try? UNNotificationAttachment(identifier: "image", url: url!, options: [:])
        content.attachments = [attachment] as! [UNNotificationAttachment]
        
        // Deliver the notification in five seconds.
        let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 5, repeats: false)
        let request = UNNotificationRequest(identifier: "FiveSecond", content: content, trigger: trigger) // Schedule the notification.
       
        notificationCenter.add(request) { (error : Error?) in
            if error != nil {
                // Handle any errors
            }
        }
        
        //Adding Actions to Notifictaion
        let like = UNNotificationAction.init(identifier: "like", title: "Like", options: .foreground)
        
        let delete = UNNotificationAction.init(identifier: "delete", title: "Delete", options: .destructive)
        //Takes the that particular Content Identifier for which We want to show these actions for.
        let category = UNNotificationCategory.init(identifier: content.categoryIdentifier, actions: [like, delete], intentIdentifiers: [], options: [])
        notificationCenter.setNotificationCategories([category])
        
    }
}

extension LocalNotificationVC : UNUserNotificationCenterDelegate {
    
    //Handles the notification when the app is in FOREGROUND
    func userNotificationCenter(_ center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {
        completionHandler([.alert, .badge, .sound])
    }
    
    //Gets called when clcike on the Notification works like didSelct of tableView
    func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Void) {
        let detailsVc = storyboard?.instantiateViewController(withIdentifier: "DetailVC") as! DetailVC
        if let userDictinory = response.notification.request.content.userInfo as? [AnyHashable:Any] {
            detailsVc.nameDictKeyValue = userDictinory["name"] as! String
        }
        navigationController?.pushViewController(detailsVc, animated: true)
    }
}
